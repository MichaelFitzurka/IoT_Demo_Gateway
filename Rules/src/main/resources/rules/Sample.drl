package com.redhat.demo.iot.datacenter.monitor
 
import com.redhat.demo.iot.datacenter.monitor.DataSet;

declare DataSet
	@role ( event )
	@expires( 2d )
end

rule "VoltageTooLow"
	lock-on-active true
	when
		$t : DataSet( deviceType == "voltage", payload < 2000 )
	then
		$t.setRequired(1);
		$t.setErrorCode(1);
		$t.setErrorMessage("Voltage too low");
		System.out.println("Voltage too low with a value of " + $t.getPayload() + " and clipping of 2000");
		update( $t );
		
end 

rule "TemperatureHigh"
	lock-on-active true
	when
		$t : DataSet( deviceType == "temperature", payload > 27 )
	then
		$t.setRequired(1);
		$t.setErrorCode(2);
		$t.setErrorMessage("Temperature too high");
		System.out.println("Temperature too high with a value of " + $t.getPayload() + " and clipping of 27");
		update( $t );
		
end 

rule "FirstData"
when
	$data:DataSet ( count == 0 ) from entry-point IOTStream
then	
	$data.setRequired(1);
end	

rule "ThisDataIWant"
when
	$data1:DataSet ( ) from entry-point IOTStream
	$data2:DataSet ( this != $data1, deviceID == $data1.deviceID, payload != $data1.payload, count == $data1.count-1 ) from entry-point IOTStream 
then
	
	$data1.setRequired(1);
end


rule "Calculate Average"
when
	$dataset : DataSet( $id:deviceID )  from entry-point IOTStream
    Number( $average : floatValue ) from accumulate( $data: DataSet( deviceID == $id, $payload:payload ) over window:time( 10m ) from entry-point IOTStream, 
        average( $payload ) )
then
	$dataset.setAverage($average);
end